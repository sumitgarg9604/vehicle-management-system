// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleManagementSystemAPI.Models;

namespace VehicleManagementSystemAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210122090904_Adding TPC")]
    partial class AddingTPC
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("VehicleManagementSystemAPI.Models.AdTypes", b =>
                {
                    b.Property<string>("adType")
                        .HasColumnType("TEXT");

                    b.HasKey("adType");

                    b.ToTable("AdTypes");
                });

            modelBuilder.Entity("VehicleManagementSystemAPI.Models.BodyTypes", b =>
                {
                    b.Property<string>("bodyType")
                        .HasColumnType("TEXT");

                    b.HasKey("bodyType");

                    b.ToTable("BodyTypes");
                });

            modelBuilder.Entity("VehicleManagementSystemAPI.Models.VehicleTypes", b =>
                {
                    b.Property<string>("VehicleType")
                        .HasColumnType("TEXT");

                    b.HasKey("VehicleType");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("VehicleManagementSystemAPI.Models.Vehicles", b =>
                {
                    b.Property<int>("vehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("adType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("make")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("vehicleId");

                    b.HasIndex("VehicleType");

                    b.HasIndex("adType");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleManagementSystemAPI.Models.Cars", b =>
                {
                    b.HasBaseType("VehicleManagementSystemAPI.Models.Vehicles");

                    b.Property<int>("Doors")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Engine")
                        .HasColumnType("TEXT");

                    b.Property<string>("bodyType")
                        .HasColumnType("TEXT");

                    b.Property<int>("wheels")
                        .HasColumnType("INTEGER");

                    b.HasIndex("bodyType");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("VehicleManagementSystemAPI.Models.Vehicles", b =>
                {
                    b.HasOne("VehicleManagementSystemAPI.Models.VehicleTypes", "VehicleTypes")
                        .WithMany()
                        .HasForeignKey("VehicleType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleManagementSystemAPI.Models.AdTypes", "AdTypes")
                        .WithMany()
                        .HasForeignKey("adType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdTypes");

                    b.Navigation("VehicleTypes");
                });

            modelBuilder.Entity("VehicleManagementSystemAPI.Models.Cars", b =>
                {
                    b.HasOne("VehicleManagementSystemAPI.Models.BodyTypes", "BodyTypes")
                        .WithMany()
                        .HasForeignKey("bodyType");

                    b.HasOne("VehicleManagementSystemAPI.Models.Vehicles", null)
                        .WithOne()
                        .HasForeignKey("VehicleManagementSystemAPI.Models.Cars", "vehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
